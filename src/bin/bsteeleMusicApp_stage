#!/bin/tcsh
set debug=0
set isBeta=1


while ( $#argv > 0 )
	switch ( $1 )
#	case '-beta':
#		set isBeta=1
#		shift
#		continue;
	case '-d':		#	debug
	case '-debug':
		set debug=1
		shift
		continue;
	default:
		echo unknown argument: $1
		exit -1;
		breaksw;
	endsw

	break;
end


if ( $debug != 0 ) then
	set echo; set verbose
endif

set dst=/var/www/html/public_html
if ( $isBeta != 0 ) then
	set dst=$dst/beta
endif
set git=~/github/bsteeleMusicApp
set target=$git/target

set app=$git:t:r
set finalWar=$target/$app.war
set lyricsDst=gs://songlyrics.bsteele.com
set lyricsWar=${app}_`date +%Y%m%d`.war
echo deploy $app\: $finalWar to $dst

set cwd=`pwd`
cd $git

#	get the songlyrics from Bodhi
$git/src/bin/bsteeleMusicApp_lyrics_update

#	compile for deployment
bsteeleMusicApp_buildId
mvn \
	-DgenerateJsInteropExports=false \
	-Dgwt.logLevel=ERROR \
	-Dgwt.style=OBF  \
	-Dgwt.compiler.compileReport=false \
	-Ddeploy=true \
	clean install
set stat=$status
if ( $stat != 0 ) then
	echo mvn install failure
	exit $stat
endif

#	add allSongs.songlyrics
cd target
cp ../../allSongs.songlyrics/allSongs.songlyrics .
jar uf $app.war allSongs.songlyrics
rm allSongs.songlyrics
pwd
cd ..


#	generate javadoc
#mvn javadoc:aggregate


#	generate app on localhost web
#	note: with github, it really doesn't need to be in google_drive
rm -rf $dst/$app	#	wow!
mkdir -p $dst/$app
cd $dst/$app
jar -xf $finalWar
cp $finalWar .		#	include the war itself so servers can auto update
cd $cwd

#	leave the war on local dst for distribution to archive
cp $finalWar $dst

#	deploy on tomcat
rm -f $CATALINA_BASE/webapps/$finalWar:t	#	avoid permission issues on the war file
cp $finalWar $CATALINA_BASE/webapps

#	deploy on mac tomcat
#or not: scp $finalWar ${mac}:/Library/Tomcat/webapps

#	deploy on web
rm -rf $dst/$app/WEB-INF/classes
rm -rf $dst/$app/WEB-INF/lib

#	generate zip for offline use
cd $dst/$app
rm -rf $app.zip
cd ..
zip -q -r $app.zip $app
mv $app.zip $dst/$app

#	send to beta web location
if ( $debug == 0 ) then
	cd $cwd
	set gs=gs://www.bsteele.com/beta/$app
	gsutil -m -q rsync -d -R -x '.*\.songlyrics$' $dst/$app/ $gs 	#	source needs the /
	gsutil -m -q setmeta -h "Cache-Control:public, max-age=60" -r $gs
	gsutil -m -q acl -r ch -u AllUsers:R $gs

	if ( $isBeta != 0 ) then
		echo test local version of $app at:
		echo	http://localhost/public_html/beta/$app
		echo	http://bsteele.com/beta/bsteeleMusicApp
	else
		echo test local version of $app at:
		echo	http://localhost/public_html/$app
		echo	http://localhost:8082/bsteeleMusicApp
		echo ... and deploy with bsteele_upload
	endif

	cd $git
	cat ./src/main/java/com/bsteele/bsteeleMusicApp/client/resources/buildId.txt
endif


exit 0
